services:
  auth-service:
    build:
      context: ./services/auth
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - ./services/auth/.env
    networks:
      - what-to-eat-network
  menu-service:
    build:
      context: ./services/menu
      dockerfile: Dockerfile
    env_file:
      - ./services/menu/.env
    volumes:
      - ./services/menu/src:/app/src
    networks:
      - what-to-eat-network
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload

  recipe-service:
    build:
      context: ./services/recipe
      dockerfile: Dockerfile
    env_file:
      - ./services/recipe/.env
    volumes:
      - ./services/recipe/src:/app/src
    working_dir: /app/src
    networks:
      - what-to-eat-network
    command: uvicorn recipe.main:app --host 0.0.0.0 --port 8000 --reload

  ets-service:
    build:
      context: ./services/eat-together
      dockerfile: Dockerfile
    env_file:
      - ./services/eat-together/.env
    volumes:
      - ./services/eat-together/src:/app/src
    networks:
      - what-to-eat-network
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload

  profile-service:
    build:
      context: ./services/profile
    env_file:
      - ./services/profile/.env
    networks:
      - what-to-eat-network

  ui-service:
    build:
      context: ./services/user-interface
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    network_mode: host
    volumes:
      - ./services/user-interface/src:/app/src
    depends_on:
      - auth-service
      - menu-service
      - recipe-service
      - ets-service
      - profile-service
    command: flask run --host=0.0.0 --port=5000 --reload
  # menu-auto_update-service:
  #   build:
  #     context: ./services/menu-auto_update
  #   networks:
  #     - what-to-eat-network

networks:
  what-to-eat-network:
    driver: "bridge"
